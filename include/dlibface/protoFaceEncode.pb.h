// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoFaceEncode.proto

#ifndef PROTOBUF_protoFaceEncode_2eproto__INCLUDED
#define PROTOBUF_protoFaceEncode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_protoFaceEncode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsprotoFaceEncodeImpl();
void InitDefaultsprotoFaceEncode();
void InitDefaultsprotoFaceEncodes_ProtoFaceEncodesEntry_DoNotUseImpl();
void InitDefaultsprotoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse();
void InitDefaultsprotoFaceEncodesImpl();
void InitDefaultsprotoFaceEncodes();
inline void InitDefaults() {
  InitDefaultsprotoFaceEncode();
  InitDefaultsprotoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse();
  InitDefaultsprotoFaceEncodes();
}
}  // namespace protobuf_protoFaceEncode_2eproto
class protoFaceEncode;
class protoFaceEncodeDefaultTypeInternal;
extern protoFaceEncodeDefaultTypeInternal _protoFaceEncode_default_instance_;
class protoFaceEncodes;
class protoFaceEncodesDefaultTypeInternal;
extern protoFaceEncodesDefaultTypeInternal _protoFaceEncodes_default_instance_;
class protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse;
class protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUseDefaultTypeInternal;
extern protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUseDefaultTypeInternal _protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse_default_instance_;

// ===================================================================

class protoFaceEncode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protoFaceEncode) */ {
 public:
  protoFaceEncode();
  virtual ~protoFaceEncode();

  protoFaceEncode(const protoFaceEncode& from);

  inline protoFaceEncode& operator=(const protoFaceEncode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  protoFaceEncode(protoFaceEncode&& from) noexcept
    : protoFaceEncode() {
    *this = ::std::move(from);
  }

  inline protoFaceEncode& operator=(protoFaceEncode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const protoFaceEncode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const protoFaceEncode* internal_default_instance() {
    return reinterpret_cast<const protoFaceEncode*>(
               &_protoFaceEncode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(protoFaceEncode* other);
  friend void swap(protoFaceEncode& a, protoFaceEncode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline protoFaceEncode* New() const PROTOBUF_FINAL { return New(NULL); }

  protoFaceEncode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const protoFaceEncode& from);
  void MergeFrom(const protoFaceEncode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(protoFaceEncode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float encode = 1;
  int encode_size() const;
  void clear_encode();
  static const int kEncodeFieldNumber = 1;
  float encode(int index) const;
  void set_encode(int index, float value);
  void add_encode(float value);
  const ::google::protobuf::RepeatedField< float >&
      encode() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_encode();

  // @@protoc_insertion_point(class_scope:protoFaceEncode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > encode_;
  mutable int _encode_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_protoFaceEncode_2eproto::TableStruct;
  friend void ::protobuf_protoFaceEncode_2eproto::InitDefaultsprotoFaceEncodeImpl();
};
// -------------------------------------------------------------------

class protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse, 
    ::std::string, ::protoFaceEncode,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse, 
    ::std::string, ::protoFaceEncode,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse();
  protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse& other);
  static const protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse*>(&_protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class protoFaceEncodes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protoFaceEncodes) */ {
 public:
  protoFaceEncodes();
  virtual ~protoFaceEncodes();

  protoFaceEncodes(const protoFaceEncodes& from);

  inline protoFaceEncodes& operator=(const protoFaceEncodes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  protoFaceEncodes(protoFaceEncodes&& from) noexcept
    : protoFaceEncodes() {
    *this = ::std::move(from);
  }

  inline protoFaceEncodes& operator=(protoFaceEncodes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const protoFaceEncodes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const protoFaceEncodes* internal_default_instance() {
    return reinterpret_cast<const protoFaceEncodes*>(
               &_protoFaceEncodes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(protoFaceEncodes* other);
  friend void swap(protoFaceEncodes& a, protoFaceEncodes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline protoFaceEncodes* New() const PROTOBUF_FINAL { return New(NULL); }

  protoFaceEncodes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const protoFaceEncodes& from);
  void MergeFrom(const protoFaceEncodes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(protoFaceEncodes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .protoFaceEncode> proto_face_encodes = 1;
  int proto_face_encodes_size() const;
  void clear_proto_face_encodes();
  static const int kProtoFaceEncodesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::protoFaceEncode >&
      proto_face_encodes() const;
  ::google::protobuf::Map< ::std::string, ::protoFaceEncode >*
      mutable_proto_face_encodes();

  // @@protoc_insertion_point(class_scope:protoFaceEncodes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      protoFaceEncodes_ProtoFaceEncodesEntry_DoNotUse,
      ::std::string, ::protoFaceEncode,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > proto_face_encodes_;
  mutable int _cached_size_;
  friend struct ::protobuf_protoFaceEncode_2eproto::TableStruct;
  friend void ::protobuf_protoFaceEncode_2eproto::InitDefaultsprotoFaceEncodesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// protoFaceEncode

// repeated float encode = 1;
inline int protoFaceEncode::encode_size() const {
  return encode_.size();
}
inline void protoFaceEncode::clear_encode() {
  encode_.Clear();
}
inline float protoFaceEncode::encode(int index) const {
  // @@protoc_insertion_point(field_get:protoFaceEncode.encode)
  return encode_.Get(index);
}
inline void protoFaceEncode::set_encode(int index, float value) {
  encode_.Set(index, value);
  // @@protoc_insertion_point(field_set:protoFaceEncode.encode)
}
inline void protoFaceEncode::add_encode(float value) {
  encode_.Add(value);
  // @@protoc_insertion_point(field_add:protoFaceEncode.encode)
}
inline const ::google::protobuf::RepeatedField< float >&
protoFaceEncode::encode() const {
  // @@protoc_insertion_point(field_list:protoFaceEncode.encode)
  return encode_;
}
inline ::google::protobuf::RepeatedField< float >*
protoFaceEncode::mutable_encode() {
  // @@protoc_insertion_point(field_mutable_list:protoFaceEncode.encode)
  return &encode_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// protoFaceEncodes

// map<string, .protoFaceEncode> proto_face_encodes = 1;
inline int protoFaceEncodes::proto_face_encodes_size() const {
  return proto_face_encodes_.size();
}
inline void protoFaceEncodes::clear_proto_face_encodes() {
  proto_face_encodes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::protoFaceEncode >&
protoFaceEncodes::proto_face_encodes() const {
  // @@protoc_insertion_point(field_map:protoFaceEncodes.proto_face_encodes)
  return proto_face_encodes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::protoFaceEncode >*
protoFaceEncodes::mutable_proto_face_encodes() {
  // @@protoc_insertion_point(field_mutable_map:protoFaceEncodes.proto_face_encodes)
  return proto_face_encodes_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protoFaceEncode_2eproto__INCLUDED
